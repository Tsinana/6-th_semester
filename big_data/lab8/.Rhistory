f
a = m a tri x (1:8 , nrow = 4 , ncol = 2)
b = c( " a " , " b " , " c " , " a " )
a = matrix(1:8 , nrow = 4 , ncol = 2)
b = c( " a " , " b " , " c " , " a " )
d = (1:4 %% 2 == 0)
e = factor ( c( " soft " , " hard " , " soft " , " m e d i u m " ) )
f = data.frame ( a , b , d , e )
f
q = [1, 0, 2, 3, 6, 8, 12, 15, 0, NA, NA, 9, 4, 16, 2, 0]
q = c(1, 0, 2, 3, 6, 8, 12, 15, 0, NA, NA, 9, 4, 16, 2, 0)
q[1]
q[len(q)]
q[length(q)]
q[3..5]
q[c(3,4,5)]
q[3:5]
q>4
q[q>4]
q[q=2]
q[q=2]
q[q==2]
q[q/3==0]
q[q%3==0]
q[q%%3==0]
q[q>4 and q%%3==0]
q[q>4 && q%%3==0]
q[q>4 & q%%3==0]
which(q == 0)
which(q>1 & q<9)
sq
sq()
sq = function()
{
q = c(1, 0, 2, 3, 6, 8, 12, 15, 0, NA, NA, 9, 4, 16, 2, 0)
q[1]
q[length(q)]
q[3:5]
q[q==2]
q[q>4]
q[q%%3==0]
q[q>4 & q%%3==0]
q[q<1 | q>5]
which(q == 0)
which(q>1 & q<9)
}
sq()
q = c(1, 0, 2, 3, 6, 8, 12, 15, 0, NA, NA, 9, 4, 16, 2, 0)
q[1]
q[length(q)]
q[3:5]
q[q==2]
q[q>4]
q[q%%3==0]
q[q>4 & q%%3==0]
q[q<1 | q>5]
which(q == 0)
which(q>1 & q<9)
rank = c(1,2,3,4,5,6,7,8,28)
country = c("Гремания","Австралия","Новая Зеландия","Дания","Норвегия","Исландия","США","Канада","Япония")
education_index = c(0.946,
0.923,
0.923,
0.92,
0.919,
0.918,
0.899,
0.891,
0.85
)
expenses = c(4.6,
5.1,
7.2,
8.7,
7.3,
7.8,
5.4,
4.8,
3.8
)
dr = data.frame(rank, country, education_index,expenses)
View(dr)
continent = c("Европа","Америка","Азия")
df = data.frame(dr,continent)
View(dr)
View(df)
dr = data.frame(dr,continent)
View(dr)
df[nrow(dr)+1,] = c(,,00,00,)
sum(dr$education_index)
sum_of_e = sum(dr$expenses)
df[nrow(dr)+1,] = c(NA,NA,sum_of_ei,sum_of_e,NA)
df[nrow(dr)+1,] <- c(NA,NA,sum_of_ei,sum_of_e,NA)
sum_of_ei = sum(dr$education_index)
df[nrow(dr)+1,] <- c(NA,NA,sum_of_ei,sum_of_e,NA)
dr[nrow(dr)+1,] <- c(NA,NA,sum_of_ei,sum_of_e,NA)
order(df$expenses,decreasing = TRUE)
View(dr)
View(df)
dd = order(df$expenses,decreasing = TRUE)
data[order(df$expenses,decreasing = TRUE)]
data[order(df$expenses,decreasing = TRUE),]
print(data[order(df$expenses,decreasing = TRUE),])
print(df[order(df$expenses,decreasing = TRUE),])
dd = (df[order(df$expenses,decreasing = TRUE),])
View(dd)
dd = (df[order(df$expenses,df$rank,decreasing = TRUE),])
View(dd)
dr = dd(dd$continent == "Азия")
dr = dd[dd$continent == "Азия"]
dr = dd[dd$continent == "Азия"]
dd$continent == "Азия"
dr = (dd[dd$continent == "Азия",])
View(dr)
dr = (dd[dd$continent == "Азия"])
q = c(1, 0, 2, 3, 6, 8, 12, 15, 0, NA, NA, 9, 4, 16, 2, 0)
q[1]
q[length(q)]
q[3:5]
q[q==2]
q[q>4]
q[q%%3==0]
q[q>4 & q%%3==0]
q[q<1 | q>5]
which(q == 0)
which(q>1 & q<9)
x = c(123,134,145,167,39)
m = c('M','M','W','M','CAT')
is.character(x)
is.character(m)
is.factor(x)
is.factor(m)
is.character(x.f)
x.f = factor(x)
m.f = factor(m)
is.character(x.f)
is.character(m.f)
is.factor(x.f)
is.factor(m.f)
m.f
plot(m.f)
plot(x.f)
plot(m.f)
w = c(69,68,93,76,10,45,76,23,45)
plot(w,x)
w = c(69,68,93,76,10)
plot(w,x,pch = as.numeric((m.f)),col = as.numeric(m.f))
numeric((m.f))
numeric((m.f))
legend("topleft",pch=1:2,col = 1:2,legend =leveld(m.f))
legend("topleft",pch=1:2,col = 1:2,legend =levels(m.f))
legend("topleft",pch=1:3,col = 1:2,legend =levels(m.f))
legend("topleft",pch=1:3,col = 1:3,legend =levels(m.f))
t = c('XXS','XXS','XS','S','XXXXXS')
t.f = factor(t)
t.o=ordered(t.f,levels = c('XXXXXS','XXS','XS','S'))
t.o=ordered(t.f,levels = c('XXXXXS','XXS','XS','S'))
h = c(8,10,NA,NA,1)
mean(h,na.rm = TRUE)
h = c(8,10,NA,NA,2)
mean(h,na.rm = TRUE)
mean(na.omit(h))
mean(h,na.rm = TRUE)
h = c(8,20,NA,NA,2)
mean(h,na.rm = TRUE)
mean(na.omit(h))
a = c(1,1,1,2,2,3,2,1,5,1)
mean(a)
h[is.ha(h)]= mean(na.omit(h))
h[is.ha(h)] <- mean(na.omit(h))
h[is.na(h)] <- mean(na.omit(h))
names = ('Олег','Олег','Олег','Олег','Кошка')
names = с('Олег','Олег','Олег','Олег','Кошка')
names = С('Олег','Олег','Олег','Олег','Кошка')
nam = С('Олег','Олег','Олег','Олег','Кошка')
nam = с('Олег','Олег','Олег','Олег','Кошка')
nam = с('Олег','Олег','Жея','Олег','Кошка')
nam = с('Олег','Олег','Жея','Олег','Кошка')
names = с('Олег','Олег','Жея','Олег','Кошка')
names = c('Олег','Олег','Жея','Олег','Кошка')
df = data.frame(weight = w,height = x, size = t.o,sex = m.f)
View(df)
df[,1]
df[[1]]
df[,"weight"]
df[df$sex=='W',]
df[order(df$sex,df$height)]
df[order(df$sex,df$height),]
windowsFonts(
A=windowsFont(“Arial Black”),
windowsFonts(
A=windowsFont(“Arial Black”),
windowsFonts(
A=windowsFont(“Arial Black”),
windowsFonts(
A=windowsFonts(“Arial Black”),
windowsFonts(A=windowsFonts(“Arial Black”),B=windowsFonts(“Bookman Old Style”),C=windowsFonts(“Comic Sans MS”))
windowsFonts(A=windowsFonts(“Arial Black”),B=windowsFonts(“Bookman Old Style”),C=windowsFonts(“Comic Sans MS”))
windows()
Sys.setlocale("LC_ALL","ja")
windowsFonts(A=windowsFonts(“Arial Black”),B=windowsFonts(“Bookman Old Style”),C=windowsFonts(“Comic Sans MS”))
windowsFonts(A=windowsFonts(“Arial Black”),B=windowsFonts(“Bookman Old Style”),C=windowsFonts(“Comic Sans MS”))
windowsFonts(A=windowsFonts(“Arial Black”))
windowsFonts(A=windowsFonts("Arial"))
windowsFonts(A=windowsFonts('Arial Black'),B=windowsFonts('Bookman Old Style'),C=windowsFonts('Comic Sans MS'))
windowsFonts(A=windowsFonts('Arial Black'))
windowsFonts(A=windowsFonts('Times New Roman'))
windowsFonts(A=windowsFont('Times New Roman'))
mygrays <- gray(0:n/n)
num<-c(1:10)
square<-num*num
plot(num,square,type="b")
help(plot)
,
plot(num,square,type="b")
plot(num,squaresfjigkls;f;sd,type="b")
num<-c(1:10)
square<-num*num
plot(num,square,type="b")
help(plot)
par(no.readonly = T)
opar <- par(no.readonly=TRUE) # создает копию текущих параметров
par(lty=2, pch=17)            # назначает тип линии – пунктирная (lty=2) вместо
#сплошной по умолчанию и тип символа – заполненный треугольник (pch=17)
plot(num,square,type="b")
par(opar) 			 #восстановление исходных значений параметров
n <- 10
mycolors <- rainbow(n)
pie(rep(1, n), labels=mycolors, col=mycolors) # Круговая диаграмма
mygrays <- gray(0:n/n)
pie(rep(1, n), labels=mygrays, col=mygrays)
windows()
Sys.setlocale("LC_ALL","ja")
windowsFonts(A=windowsFont('Arial Black'),B=windowsFont('Bookman Old Style'),C=windowsFont('Comic Sans MS'))
opar <- par(no.readonly=TRUE)
par(pin=c(2, 3))
par(lwd=2, cex=1.5)
par(cex.axis=.75, font.axis=3)
plot(num, square, type="b", pch=19, lty=2, col="red")
plot(num, square, type="b", pch=23, lty=6, col="blue", bg="green")
par(opar)
opar <- par(no.readonly=TRUE)
par(pin=c(2, 3))
par(lwd=2, cex=1.5)
par(cex.axis=.75, font.axis=3)
plot(num, square, type="b", pch=19, lty=2, col="red")
plot(num, square, type="b", pch=23, lty=6, col="blue", bg="green")
par(opar)
plot(num, square, type="b",
+      col="green", lty=2, pch=2, lwd=2,
plot(num, square, type="b",
col="green", lty=2, pch=2, lwd=2,
main="Квадратичная зависимость",
sub="Просто квадрат числа",
xlab="Month", ylab="Квадрат числа",
xlim=c(0, 12), ylim=c(0, 300))
Sys.setlocale("LC_ALL","ru")
plot(num, square, type="b",
col="green", lty=2, pch=2, lwd=2,
main="Квадратичная зависимость",
sub="Просто квадрат числа",
xlab="Month", ylab="Квадрат числа",
xlim=c(0, 12), ylim=c(0, 300))
Sys.setlocale("LC_ALL","Endlish")
Sys.setlocale("LC_ALL","English")
Sys.setlocale("LC_ALL","En")
plot(num, square, type="b",
col="green", lty=2, pch=2, lwd=2,
main="Квадратичная зависимость",
sub="Просто квадрат числа",
xlab="Month", ylab="Квадрат числа",
xlim=c(0, 12), ylim=c(0, 300))
> plot(num, square, type="b",  ann=FALSE,
plot(num, square, type="b",  ann=FALSE,
col="green", lty=2, pch=2, lwd=2,
xlim=c(0, 12), ylim=c(0, 300))
title(main="Квадратичная зависимость", col.main="red",
sub="Просто квадрат числа", col.sub="blue",
xlab="Month", ylab="Квадрат числа",
col.lab="green", cex.lab=1)
setwd("C:/Users/Tsinana/GitHub/6-th_semester/big_data/lab8/")
opar = par(no.readonly = TRUE)
data<-read.csv("data.csv", sep=",", header=T, fileEncoding="cp1251")
View(data)
df = data[data$Country.Code=='USA']
df = data[data$Country.Code=='USA',]
View(df)
task1 = df[df$Series.Code=='SP.POP.GROW',]
View(df)
View(task1)
task1 = df[df$Series.Code=='SP.POP.GROW' or df$Series.Code=='NY.GDP.MKTP.KD.ZG',]
task1 = df[df$Series.Code=='SP.POP.GROW' | df$Series.Code=='NY.GDP.MKTP.KD.ZG',]
View(task1)
longley
a = longley
View(a)
names(longley)
dim(longley)
summary(longley)
boxplot(longley)
boxplot(longley$GNP)
boxplot(longley$Employed)
cor(longley)
a = cor(longley)
install.packages(pkgs=c("ellipse"))
library(ellipse)
plotcorr(cor(longley))
install.packages(pkgs=c("ellipse"))
library(ellipse)
plotcorr(cor(task1))
data<-read.csv("data.csv", sep=",", header=T, fileEncoding="cp1251")
df = data[data$Country.Code=='USA',]
task1 = df[df$Series.Code=='SP.POP.GROW' | df$Series.Code=='NY.GDP.MKTP.KD.ZG',]
plotcorr(cor(task1))
View(a)
View(task1)
plotcorr(cor(longley[5:34,]))
plotcorr(cor(task1[5:34,]))
task1[5:34,]
a = task1[5:34,1:2]
View(a)
a = task1[1:2,5:34]
plotcorr(cor(task1[1:2,5:33]))
a = task1[1:2,5:33]
cor(task1[1:2,5:33])
View(task1)
lonely
plotcorr(cor(task1[1:2,5:33]))
a = task1[1:2,5:33]
plotcorr(cor(task1[1:2,5:7]))
cor(5:15,7:17)
plotcorr(cor(5:15,7:17))
cor(task1[1:2,5:33])
task1[1:2,5:33]
a = as.numeric(task1[1:2,5:33])
a = lapply(my_data, as.numeric)
a = lapply(task1, as.numeric)
a = lapply(task1[1:2,5:33], as.numeric)
View(a)
plotcorr(cor(a))
cor(a)
plotcorr(cor(a[,1:2]))
plotcorr(cor(a[1:2,1:2]))
plotcorr(cor(a[1:2]))
plotcorr(cor(a[1:2]))
a = data.frame(lapply(task1[1:2,5:33], as.numeric))
plotcorr(cor(a[,1:2]))
plotcorr(cor(a))
task1 = df[df$Series.Code=='SP.POP.GROW' | df$Series.Code=='NY.GDP.MKTP.KD.ZG',]
task1 = data.frame(lapply(task1[1:2,5:33], as.numeric))
plotcorr(cor(task1))
task1
View(task1)
plotcorr(cor(task1[,1:2]))
task1[,1:2]
plot(task1)
plot(task1[,1:10])
plot(task1[,1:10],type='b')
hist(task1[,1:10])
hist(task1)
hist(task1[1,])
View(task1)
boxplot(task1[1,])
plot(task1[1,],task1[2,])
plot(task1[1,1:10],task1[2,1:10])
plot(df)
task1 = t(task1)
plot(task1)
plotcorr(cor(task1))
plot(task1)
task1 = df[df$Series.Code=='SP.POP.GROW' | df$Series.Code=='NY.GDP.MKTP.KD.ZG',]
task1 = data.frame(lapply(task1[1:2,5:33], as.numeric))
plotcorr(cor(task1))
plot(task1)
View(df)
plot(df[1,])
plot(df[1,5:33])
df[1,5:33]
years = c(1989:2017)
plot(years,df[1,5:33])
plot(years,df[df$Series.Code=='NY.GDP.MKTP.KD.ZG',5:33])
View(data)
plot(years,task1[1,])
plot(years,task1[2,])
plot(years,task1[1,])
plot(years,task1[1,])
plot(years,task1[2,])
#как в методе
plot(years,df[1,5:33])
plotcorr(cor(task1))
plotcorr(cor(task1[,1:2]))
> cor(5:15,7:17)
cor(5:15,7:17)
plotcorr(cor(task1[1, ], task1[2, ))
plotcorr(cor(task1[1, ], task1[2, ]))
task1 = t(task1)
plotcorr(cor(task1[1, ], task1[2, ]))
plotcorr(cor(task1[1, ], task1[2, ]))
task1[1, ]
plotcorr(cor(task1[, 1], task1[, 2]))
plotcorr(cor(task1[, 1], task1[, 2]))
task1 = t(task1)
plotcorr(cor(task1[, 1], task1[, 2]))
plotcorr(cor(task1[1, ], task1[2, ]))
plotcorr(cor(longley))
longley
dim(longley)
dim(longley)
a = longley
View(a)
cor(5:15,7:17)
cor(5:15,c(7:16,23))
0.9375093
cor(5:15,c(6:16,23))
task1
task1 = t(task1)
plotcorr(cor(longley))
plotcorr(cor(task1))
cor(task1)
task2 = df[df$Series.Code=='SP.POP.GROW' | df$Series.Code=='SL.UEM.BASC.ZS',]
task1 = data.frame(lapply(task1[1:2,5:33], as.numeric))
task2 = df[df$Series.Code=='SP.POP.GROW' | df$Series.Code=='SL.UEM.BASC.ZS',]
task2 = data.frame(lapply(task2[1:2,5:33], as.numeric))
View(task2)
task2 = na.omit(task2)
'
task2 = df[df$Series.Code=='SP.POP.GROW' | df$Series.Code=='SL.UEM.BASC.ZS',]
task2 = na.omit(task2)
task2 = df[df$Series.Code=='SP.POP.GROW' | df$Series.Code=='SL.UEM.BASC.ZS',]
task2 = na.omit(task2)
task2 = na.omit(task2)
task2 = df[df$Series.Code=='SP.POP.GROW' | df$Series.Code=='SL.UEM.BASC.ZS',]
task2 <- task2[,!apply(is.na(t(task2)), 2, all)]
task2 = data.frame(lapply(task2[1:2,5:34], as.numeric))
task2 = df[df$Series.Code=='SP.POP.GROW' | df$Series.Code=='SL.UEM.BASC.ZS',]
task2 <- task2[,!apply(is.na(t(task2)), 2, all)]
task2 = t(na.omit(t(task2)))
task2 = (na.omit(t(task2)))
task2 = (na.omit((task2)))
task2 = data.frame(lapply(task2[1:2,5:33], as.numeric))
task2 = task2[1:2,5:34]
task2 = df[df$Series.Code=='SP.POP.GROW' | df$Series.Code=='SL.UEM.BASC.ZS',]
task2 = task2[1:2,5:34]
task2 = t(na.omit(t(task2)))
task2
task2 = (na.omit(t(task2)))
task2 = (na.omit((task2)))
task2 = (na.omit((task2)))
task2 = (na.omit((task2)))
task2 = (na.omit((task2)))
task2 = (na.omit((task2)))
task2 = na.omit(task2)
task2 = na.omit(data.frame(task2))
task2 = na.omit(task2)
task2 = df[df$Series.Code=='SP.POP.GROW' | df$Series.Code=='SL.UEM.BASC.ZS',]
task2 = na.omit(task2)
task2 = data.frame(lapply(task2[1:2,5:33], as.numeric))
task2 = task2[1:2,5:34]
task2 = df[df$Series.Code=='SP.POP.GROW' | df$Series.Code=='SL.UEM.BASC.ZS',]
task2 = task2[1:2,5:34]
task2 = task2[!(is.na(task2)), ]
task2 = df[df$Series.Code=='SP.POP.GROW' | df$Series.Code=='SL.UEM.BASC.ZS',]
task2 = task2[1:2,5:34]
task2 = task2[!(is.na(task2[1,])), ]
